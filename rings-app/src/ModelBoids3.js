/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { Color, MeshStandardMaterial } from 'three'
import {useFrame } from "@react-three/fiber"

export function ModelBoids3(props) {
  const { nodes, materials } = useGLTF(process.env.PUBLIC_URL + "/3d/b3.glb")
  const ref = useRef()
    // Animate model
    useFrame((state) => {
      const t = state.clock.getElapsedTime()
      ref.current.rotation.z = -0.2 - (1 + Math.sin(t / 1.5))
      ref.current.rotation.x = Math.cos(t / 4) 
      //ref.current.rotation.y = Math.sin(t / 4) 
      //ref.current.position.y = (1 + Math.sin(t / 1.5)) / 10
    })

  return (
    <group
     ref={ref} 
     dispose={null}>
      <mesh receiveShadow castShadow geometry={nodes.mesh_0.geometry}>
      <meshPhysicalMaterial 
      color= "black"
      clearcoat={1}
      clearcoatRoughness={0}
      roughness={1}
      metalness={.3}
      reflectivity={1}
      />
      </mesh>
    </group>
  )
}

useGLTF.preload(process.env.PUBLIC_URL + "/3d/b3.glb")
